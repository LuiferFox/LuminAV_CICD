pipeline {
    agent any

    environment {
        DOCKERHUB_USER = 'luiferfox'
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-cred')
    }

    stages {

        stage('Checkout') {
            steps {
                echo 'üîß Clonando el c√≥digo desde GitHub...'
                checkout scm
            }
        }

        stage('Backend: Test') {
            steps {
                dir('LuminAV/LuminAV_backend') {
                    echo 'üß™ Ejecutando pruebas del backend (JUnit)...'
                    bat 'mvn -q clean test'
                }
            }
            post {
                always {
                    junit 'LuminAV/LuminAV_backend/target/surefire-reports/*.xml'
                }
            }
        }

        stage('Frontend: Test (opcional)') {
            when {
                expression { fileExists('LuminAV/LuminAV_frontend/package.json') }
            }
            steps {
                dir('LuminAV/LuminAV_frontend') {
                    echo '‚öõÔ∏è Ejecutando pruebas del frontend...'
                    bat 'npm install'
                    bat 'npm run test || echo "Pruebas frontend omitidas"'
                }
            }
        }

        stage('Docker Login & Push') {
            steps {
                echo 'üê≥ Logueando en Docker Hub...'
                bat "docker login -u %DOCKERHUB_USER% -p %DOCKERHUB_CREDENTIALS%"

                echo 'üöÄ Construyendo y subiendo im√°genes...'
                dir('LuminAV/LuminAV_backend') {
                    bat "docker build -t %DOCKERHUB_USER%/luminav-backend:1 ."
                    bat "docker push %DOCKERHUB_USER%/luminav-backend:1"
                }

                dir('LuminAV/LuminAV_frontend') {
                    bat "docker build -t %DOCKERHUB_USER%/luminav-frontend:1 ."
                    bat "docker push %DOCKERHUB_USER%/luminav-frontend:1"
                }
            }
        }

        stage('Tag latest') {
            steps {
                echo 'üè∑Ô∏è Etiquetando im√°genes como latest...'
                bat "docker tag %DOCKERHUB_USER%/luminav-backend:1 %DOCKERHUB_USER%/luminav-backend:latest"
                bat "docker tag %DOCKERHUB_USER%/luminav-frontend:1 %DOCKERHUB_USER%/luminav-frontend:latest"
                bat "docker push %DOCKERHUB_USER%/luminav-backend:latest"
                bat "docker push %DOCKERHUB_USER%/luminav-frontend:latest"
            }
        }

        stage('Deploy (opcional)') {
            steps {
                echo 'üöÄ Despliegue futuro (Ansible/Kubernetes)...'
            }
        }
    }

    post {
        success {
            echo '‚úÖ Pipeline completado exitosamente.'
        }
        failure {
            echo '‚ùå Error en el pipeline. Revisa los logs de Jenkins.'
        }
    }
}
